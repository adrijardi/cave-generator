AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Meta pipeline to define continuous deployment pipelines for Gollum

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
    Default: cave-generator
  WebBucketName:
    Description: The name of the bucket to publish the web
    Type: String
  GitHubToken:
    Description: Token to access GitHub resources
    Type: String
  Repository:
    Description: Github repository of the service to build, must belong to ArtosSystems' organization
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
#          - Email

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  WebBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketName: !Ref WebBucketName
      WebsiteConfiguration:
        IndexDocument: index.html

  Dns:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
#        DNSName: cavegen.coding42.com.s3-website-eu-west-1.amazonaws.com #!GetAtt [WebBucket, RegionalDomainName]
        DNSName: !GetAtt [WebBucket, WebsiteURL]
#        EvaluateTargetHealth: false
        HostedZoneId: Z1BKCTXD74EZPE
      HostedZoneName: coding42.com.
      Name: !Ref WebBucketName
#      Region: eu-west-1
      Type: A
#      SetIdentifier:

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: cave-generator-build
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref PipelineName
          Status: ENABLED
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 20
      Artifacts:
        Type: CODEPIPELINE

#  Deploy:
#    Type: AWS::CodeBuild::Project
#    Properties:
#      Name: gollum-deploy
#      Environment:
#        ComputeType: BUILD_GENERAL1_SMALL
#        Image: hashicorp/terraform:0.12.12
#        Type: LINUX_CONTAINER
#      LogsConfig:
#        CloudWatchLogs:
#          GroupName: !Ref PipelineName
#          Status: ENABLED
#      ServiceRole: !Ref BuildRole
#      Source:
#        BuildSpec: deployment/dev-buildspec.yml
#        Type: CODEPIPELINE
#      Tags:
#        - Key: environment
#          Value: tooling
#      TimeoutInMinutes: 20
#      Artifacts:
#        ArtifactIdentifier: plan
#        Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: GitHubCheckout
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: adrijardi
                Repo: !Ref Repository
                Branch: master
                OAuthToken: !Ref GitHubToken
              Namespace: Source
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: BuildFiles
              Configuration:
                ProjectName: !Ref BuildProject
                PrimarySource: TemplateSource
                EnvironmentVariables: '[{"name":"BranchName","value":"#{Source.BranchName}","type":"PLAINTEXT"},{"name":"CommitId","value":"#{Source.CommitId}","type":"PLAINTEXT"}]'
              RunOrder: '1'
        - Name: Deploy
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: S3
              Version: '1'
            InputArtifacts:
              - Name: BuildFiles
            Configuration:
              BucketName: !Ref WebBucketName
              Extract: true
            RunOrder: '1'

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DevPipelineRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'sns:Publish'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource: !Join ['', ['arn:aws:s3:::', !Ref ArtifactStoreBucket, /*]]
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource:
                  - !GetAtt [BuildProject, Arn]
              - Action:
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:PutObjectVersionAcl'
                Effect: Allow
                Resource:
                  - !Join ['', ['arn:aws:s3:::', !Ref WebBucket, /*]]

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
              - Action: '*'
                Effect: Allow
                Resource:
                  - !Join ['', ['arn:aws:s3:::', !Ref ArtifactStoreBucket, /*]]
              - Action: '*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::terraform.aventus.io'
                  - 'arn:aws:s3:::terraform.aventus.io/*'
              - Action:
                  - 'ecs:*'
                Effect: Allow
                Resource: '*'
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'

#  ProdDeployRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Action: ['sts:AssumeRole']
#            Effect: Allow
#            Principal:
#              Service: [codebuild.amazonaws.com]
#      Path: /
#      Policies:
#        - PolicyName: CodePipelineAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Action:
#                  - 'logs:CreateLogGroup'
#                  - 'logs:CreateLogStream'
#                  - 'logs:PutLogEvents'
#                Effect: Allow
#                Resource: '*'
#              - Action: '*'
#                Effect: Allow
#                Resource:
#                  - !Join ['', ['arn:aws:s3:::', !Ref ArtifactStoreBucket, /*]]
#              - Action: '*'
#                Effect: Allow
#                Resource:
#                  - 'arn:aws:s3:::terraform.artos.io'
#                  - 'arn:aws:s3:::terraform.artos.io/*'
#              - Action:
#                  - 'ecs:*'
#                Effect: Allow
#                Resource: '*'
#              - Action:
#                  - '*'
#                Effect: Allow
#                Resource: '*'


# Look at https://github.com/adcreare/cloudformation/tree/master/code-pipeline-cross-account